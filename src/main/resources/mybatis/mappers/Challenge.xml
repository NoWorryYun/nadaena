<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="Challenge">

	<resultMap id="resultChallengeVo" type="ChallengeVo">
		<result column="certifiedNo" property="certifiedNo" />
		<result column="certifyNo" property="certifyNo" />
		<result column="nickname" property="nickname" />
		<result column="certifiedIMG" property="certifiedIMG" />
		<result column="certifieddate" property="certifieddate" />
	</resultMap>


	<!-- /////////////////////////////// 챌린지 개설 관련 xml /////////////////////////////// -->	
	<!-- 일반 챌린지만들기 -->
	<insert id="writeChallenge" parameterType="ChallengeVo">
		
		<selectKey keyProperty="challengeNo" resultType="int" order="BEFORE">
		    select seq_challengeNo.nextval from dual
		</selectKey>
		
		<![CDATA[
			insert into challenge
			values( #{challengeNo},
					#{interestNo}, 
					#{clgTitle}, 
					#{img},
					to_char(sysdate, 'yy-mm-dd'), 
					#{recruitment}, 
					#{period}, 
					#{certify},
					#{minigame}, 
					#{upload}, 
					#{certifyDay},
					#{content},
					#{color},
					#{tag1},
					#{tag2},
					#{tag3},
					#{tag4},
					#{tag5},
					#{clgLevel},
					1
				)
		]]>
	</insert>
	
	<!-- 챌린지 과제 만들기 -->
	 <insert id="makeSubject" parameterType="ChallengeVo">
      <![CDATA[   
         insert into certify
            values (
            seq_certifyNo.nextval,
            #{challengeNo}, 
            #{certifyTitle }, 
            #{subOn},
			#{subOff}
			)
       ]]>
   </insert>
   
	<!-- 챌린지 참여(방장) -->
	<insert id="joinChallengeHeader" parameterType="ChallengeVo">
		<![CDATA[
		insert into mychallenge 
		values(
		    seq_userClgNo.nextval,
		    #{challengeNo},
		    #{userNo},
		    sysdate,
		    #{payment},
		    1,
		    1,
		    0
		)
		]]>
	</insert>
	
	<!-- certifyList 가져오기 -->
	<select id="certifyList" parameterType="ChallengeVo" resultType="ChallengeVo">
	<![CDATA[
		select  cc.rn rn,
		        cc.certifyNo certifyNo,
		        cc.challengeNo challengeNo,
		        cc.certifyTitle certifyTitle,
		        cc.subOn subOn,
		        cc.subOff subOff,
		        cc.certifyChk certifyChk,
		        cc.certifiedNo certifiedNo
		from (  select  rownum rn,
		                c.certifyNo,
		                c.challengeNo,
		                c.certifyTitle,
		                c.subOn,
		                c.subOff,
		                c.certifyChk,
		                c.certifiedNo
		        from (  select  q.certifyNo certifyNo,
		                        q.challengeNo challengeNo,
		                        q.certifyTitle certifyTitle,
		                        q.subOn subOn,
		                        q.subOff subOff,
		                        d.certifyNo certifyChk,
		                        d.certifiedNo certifiedNo
		                from certify q,  (select certifyNo,
		                                         certifiedNo
		                                    from certified
		                                    where certifieddate = to_char(sysdate, 'yy-mm-dd')
		                                    and userNo = #{userNo}) d
		                where challengeNo = #{challengeNo}
		                and q.certifyNo = d.certifyNo(+)
		                order by q.certifyNo asc) c
		     ) cc
		]]>
	</select>
	<!-- /////////////////////////////////////////////////////////////////////// -->
	
	
	
	<!-- ///////////////////////////챌린지 세부 페이지 관련/////////////////////////// -->
	<!-- 챌린지 intro -->
	<select id="intro"  parameterType="int" resultType="ChallengeVo">
		<![CDATA[
			select challengeNo,
			       c.interestNo interestNo,
			       i.interestName interestName,
			       clgTitle, 
			       img,
			       to_char(regDate, 'yyyy-mm-dd') regDate, 
			       to_char(regDate+recruitment, 'yyyy-mm-dd') recRD,
			       to_char(regDate+recruitment-1, 'yyyy-mm-dd') recRDM,
			       to_char(regDate+recruitment-1+(period*7), 'yyyy-mm-dd') recRDP,
			       recruitment, 
			       period, 
			       certify,
			       minigame, 
			       upload, 
			       certifyDay,
			       content,
			       tag1,
			       tag2,
			       tag3,
			       tag4,
			       tag5,
			       clgLevel,
			       clgGroup,
			       to_char(regDate+recruitment, 'mmdd') startDate,
			       to_char(regDate+recruitment-1+(period*7), 'mmdd') endDate
			from challenge c, interest i
			where c.interestno = i.interestno(+)
			and c.challengeNo = #{challengeNo}
		]]>
	</select>
	
	<!-- 카테고리 이름 가져오기 -->
	<select id="cateId" parameterType="int" resultType="String">
		<![CDATA[
			select interestName
			from interest
			where interestNo = #{interestNo}		
		]]>
	</select>
		
	<!-- 챌린지 참여 금액 확인 -->
	<select id="userPay" parameterType="ChallengeVo" resultType="int">
		<![CDATA[
			select payment
			from mychallenge
			where challengeNo = #{challengeNo}
			and userNo = #{userNo}
		]]>
	</select>
	
	<!-- 챌린지 참여(유저) -->
	<insert id="joinChallenge" parameterType="ChallengeVo">
		<![CDATA[
		insert into mychallenge 
		values(
		    seq_userClgNo.nextval,
		    #{challengeNo},
		    #{userNo},
		    sysdate,
		    #{payment},
		    2,
		    1,
		    0
		)
		]]>
	</insert>
	
	<!-- 챌린지 참여 금액만큼 빼기(방장) -->
	<insert id="joinPayHeader" parameterType="ChallengeVo">
		<![CDATA[
			insert into point
			values(seq_pointNo.nextval, #{userNo}, 2, 1, -#{payment}, to_char(sysdate, 'yyyy-mm-dd'), null , #{challengeNo}, '챌린지 개설')		
		]]>
	</insert>
	
	
	<!-- 챌린지 참여 금액만큼 빼기(일반유저) -->
	<insert id="joinPay" parameterType="ChallengeVo">
		<![CDATA[
			insert into point
			values(seq_pointNo.nextval, #{userNo}, 2, 1, -#{amount}, to_char(sysdate, 'yyyy-mm-dd'), null , #{challengeNo}, '챌린지 참여')		
		]]>
	</insert>


	
	<!-- 챌린지 탈퇴(유저) -->
	<insert id="joinCancel" parameterType="ChallengeVo">
		<![CDATA[
			delete from mychallenge
			where challengeNo = #{challengeNo}
			and userNo = #{userNo}
		]]>
	</insert>
	
	<!-- 챌린지 탈퇴 금액 환전 -->
	<insert id="joinPayBack" parameterType="ChallengeVo">
		<![CDATA[
			insert into point
			values(seq_pointNo.nextval, #{userNo}, 2, 1, #{amount}, to_char(sysdate, 'yyyy-mm-dd'), null , #{challengeNo}, '챌린지 취소')
		]]>
	</insert>
	
	<!-- 북마크 확인 -->
	<select id="bookMark" parameterType="int" resultType="int">
		<![CDATA[
			select count(challengeNo)
			from bookmark
			where userNo = #{userNo}
		]]>
	</select>

	<!-- 챌린지 정보 삭제 -->
	<delete id="deleteClg" parameterType="int">
		<![CDATA[
			delete from challenge
			where challengeNo = #{challengeNo}
		]]>
	</delete>
	
	<!-- 챌린지 인증리스트 삭제 -->
	<delete id="deleteClgUpload" parameterType="int">
		<![CDATA[
			delete from certify
			where challengeNo = #{challengeNo}
		]]>
	</delete>
	
	<!-- 챌린지 유저인증리스트 여부 확인 -->
	<select id="ClguUerUploadCheck" parameterType="int" resultType="int">
		<![CDATA[
			select count(certifiedNo) certifiedNo
			from certify c, certified cc
			where c.certifyNo = cc.certifyNo
			and challengeNo = #{challengeNo}
		]]>
	</select>
	<!-- 챌린지 유저인증리스트 삭제 -->
	<delete id="deleteClgUserUpload" parameterType="int">
		<![CDATA[
			delete from certified c
			where exists(
			select challengeNo
			from certify cc
			where c.certifyNo = cc.certifyNo
			and challengeNo = #{challengeNo}
            )
		]]>
	</delete>
	
	<!-- 챌린지 북마크 여부 확인 -->
	<select id="chkBookmark" parameterType="int" resultType="int">
		<![CDATA[
			select count(bookmarkNo) certCount
			from bookmark
			where challengeNo = #{challengeNo} 
		]]>
	</select>
	
	<!-- 챌린지삭제시 북마크 삭제 -->
	<delete id="deleteBookMark" parameterType="int">
		<![CDATA[
			delete from bookmark
			where challengeNo = #{challengeNo}
		]]>
	</delete>
	
	<!-- 북마크 설정 -->
	<insert id="chkBM" parameterType="ChallengeVo">
		<![CDATA[
			insert into bookmark
			values(seq_bookmarkNo.nextval, #{userNo}, #{challengeNo}, sysdate)
		]]>
	</insert>

	<!-- 북마크 해제 -->
	<delete id="unChkBM" parameterType="ChallengeVo">
		<![CDATA[
			delete from bookmark
			where userNo = #{userNo}
			and challengeNo = #{challengeNo}
		]]>
	</delete>
		
	<!-- 챌린지 참여 여부 확인 -->
	<select id="joinChk" parameterType="ChallengeVo" resultType="ChallengeVo">
		<![CDATA[
			select  ( select count(userNo)
			          from mychallenge
			          where challengeNo = #{challengeNo}
			          and userNo = #{userNo}) userCount,
	        		founder,
	        		(select payment
			         from mychallenge
			         where challengeNo = #{challengeNo}
			         and userNo = #{userNo}) payment
			from mychallenge          
			where challengeNo = #{challengeNo}
			and userNo = #{userNo}
		]]>
	</select>
			
	<!-- 진행도 체크하기 -->
	<select id="chkProgress" parameterType="ChallengeVo" resultType="int">
		<![CDATA[
			select  count(ed.certifiedNo) certCount
			from certify fy, (select certifiedNo,
			                         certifyNo,
			                         userNo,
			                         certifieddate                         
			                  from certified
			                  where certifieddate = #{certifieddate}
			                  and userNo = #{userNo}) ed, (select  challengeNo
					                                       from challenge
					                                       where challengeNo = #{challengeNo}) c
			where fy.certifyNo = ed.certifyNo(+)
			and c.challengeNo = fy.challengeNo
		]]>
	</select>
	
	<!-- 챌린지 인원 리스트 뽑기 -->
	<select id="clgUserList" parameterType="int" resultType="int">
		<![CDATA[
			select userNo
			from myChallenge
			where challengeNo = #{challengeNo}
		]]>
	</select>

	<!-- 인증 리스트 뽑기 -->
	<select id="certifyIMGList" parameterType="map" resultMap="resultChallengeVo">
		<![CDATA[
			select ot.rn rn,
			       ot.certifiedNo certifiedNo,
			       ot.certifyNo certifyNo,
			       ot.certifyTitle certifyTitle,
			       ot.nickname nickname,
			       ot.certifiedIMG certifiedIMG,
			       to_char(ot.certifieddate, 'yy-mm-dd') certifieddate
			from (  select  rownum rn,
			                ct.certifiedNo certifiedNo,
			                ct.certifyNo certifyNo,
			                ct.certifyTitle certifyTitle,
			                ct.nickname nickname,
			                ct.certifiedIMG certifiedIMG,
			                ct.certifieddate certifieddate
			        from (  select  c.certifiedNo certifiedNo,
			                        c.certifyNo certifyNo,
			                        cc.certifyTitle certifyTitle,
			                        u.nickname nickname,
			                        c.certifiedIMG certifiedIMG,
			                        c.certifieddate certifieddate
			                from certified c, users u, certify cc
			                where c.userNo = u.userNo
			                and c.certifyNo = cc.certifyno
			                and challengeNo = #{challengeNo}
			                order by certifieddate asc ) ct
			    ) ot
			where rn>=#{startRnum}
			and rn<=#{endRnum}
		]]>	
	</select>
	
	<!-- 전체 인증 갯수 뽑기 -->
	<select id="selectTotalCnt" parameterType="int" resultType="int">
		<![CDATA[
			select count(certifiedNo) count
			from certified c, certify cc
			where challengeNo = #{challengeNo}
			and c.certifyNo = cc.certifyNo
		]]>
	</select>
	<!-- 캘린더 날짜계산 -->
	
	<select id="calender" parameterType="ChallengeVo" resultType="ChallengeVo">
		<![CDATA[
			select  cc.certifyTitle certifyTitle,
			        c.regDate regDate,
			        recruitment recruitment,
			        to_char(regDate+recruitment, 'yyyy-mm-dd') recRD,
			        to_char(regDate+recruitment+(subOn/24), 'hh24:mi:ss') sbo,
			        to_char(regDate+recruitment+(subOff/24), 'hh24:mi:ss')sbof,
			        c.period period,
			        c.upload upload,
			        cc.subon subOn,
			        cc.suboff subOff,
			        cc.certifieddate certifieddate
			from challenge c, (select  rownum rn,
			                            ct.certifyNo,
			                            ct.certifyTitle,
			                            ct.challengeNo,
			                            ct.subon,
			                          ct.suboff,
			                          cf.certifieddate,
			                          cf.userNo
			                    from  certify ct, (select certifieddate,
			                                            userNo,
			                                            certifyNo
			                                    from certified
			                                    where userNo= #{userNo}
			                                    and certifieddate = #{certifieddate}) cf
			                    where ct.certifyNo = cf.certifyNo(+)
			                    and ct.challengeNo = #{challengeNo}) cc
			where c.challengeNo = cc.challengeNo
			and c.challengeNo = #{challengeNo}
		]]>
	</select>
	
	<!-- 답 제출하기 -->
	<insert id="certifiedSubmit">
		<![CDATA[
			insert into certified
			values(seq_certifiedNo.nextval, #{certifyNo}, #{userNo}, #{img}, to_char(sysdate, 'yy-mm-dd'))
		]]>
	</insert>

	<!-- 답 수정하기 -->
	<update id="certifiedUpdate">
		<![CDATA[
			update certified
			set certifiedImg = #{img}
			where certifiedNo = #{certifiedNo}
		]]>
	</update>
	
	<!-- ////////////////////////////////유저 접근 제한 설정 //////////////////////////////////// -->
	<!-- 챌린지 존재 여부 확인 -->
	<select id="clgChk" parameterType="int" resultType="int">
		<![CDATA[
			select challengeNo
			from challenge
			where challengeNo = #{challengeNo}
		]]>
	</select>
	
	<!-- 참여 여부 확인 -->
	<select id="joinCount" parameterType="int" resultType="int">
		<![CDATA[
			select count(challengeNo) joinCount
			from mychallenge
			where state = 1
			and userNo = #{userNo}
		]]>
	</select>
	
	<!-- 포인트 여부 확인하기 -->
	<select id="pointChk" parameterType="int" resultType="int">
		<![CDATA[
			select amount
			from point
			where userNo = #{userNo}
		]]>
	</select>
	
	<!-- 유저 amount 계산 -->
	<select id="userAmount" parameterType="int" resultType="int">
		<![CDATA[
			select amount
			from point
			where userNo = #{userNo}
		]]>
	</select>
	
	
	
</mapper>
