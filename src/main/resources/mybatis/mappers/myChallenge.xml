<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="myChallenge">
 
	<!-- 참가챌린지 가져오기 -->
	<select id="selectList" resultType="MCVo">
		<![CDATA[
			select  m.userNo,
					m.userClgNo,
					c.challengeNo,
					c.clgTitle,
					m.mychallengeDate,
					m.founder,
					m.achievement,
					m.state,
			        to_char(c.regdate, 'yy/mm/dd') regDate,
			        c.recruitment,
			        c.period,
			        to_char(c.regdate + c.recruitment) startday,
			        to_char(c.regdate + c.recruitment + c.period) endday,
			        m.payment,
			        to_char(sysdate-1, 'yy/mm/dd') yesterday
			from challenge c, mychallenge m
			where c.challengeNo = m.challengeNo
			and   m.state = 1
		]]>
	</select>	
	
	<!-- 종료 챌린지(전체) + 페이징 -->
	<select id="selectList12" parameterType= "Map" resultType="MCVo">
		<![CDATA[
			select  ort.rn,
					ort.userNo,
					ort.userClgNo,
					ort.challengeNo,
					ort.clgTitle,
					ort.mychallengeDate,
					ort.founder,
					ort.achievement,
					ort.state,
			        ort.regDate,
			        ort.period,
			        ort.payment
			from (select rownum rn,
						 ot.userNo,
						 ot.userClgNo,
						 ot.challengeNo,
						 ot.clgTitle,
						 ot.mychallengeDate,
						 ot.founder,
						 ot.achievement,
						 ot.state,
			        	 ot.regDate,
			        	 ot.period,
			       	  	 ot.payment
				  from (select  m.userNo,
								m.userClgNo,
								c.challengeNo,
								c.clgTitle,
								m.mychallengeDate,
								m.founder,
								m.achievement,
								m.state,
						        to_char(c.regdate, 'yy/mm/dd') regDate,
						        c.period,
						        m.payment
					    from challenge c, mychallenge m
					    where c.challengeNo = m.challengeNo
					    and   m.state = 2)ot
				  )ort
			where rn>=#{startRnum}
			and rn<=#{endRnum}	  
		]]>
	</select>
	
	<!-- 종료 챌린지(성공) + 페이징 -->
	<select id="selectList13" parameterType= "Map" resultType="MCVo">
		<![CDATA[
			select  ort.rn,
					ort.userNo,
					ort.userClgNo,
					ort.challengeNo,
					ort.clgTitle,
					ort.mychallengeDate,
					ort.founder,
					ort.achievement,
					ort.state,
			        ort.regDate,
			        ort.period,
			        ort.payment
			from (select rownum rn,
						 ot.userNo,
						 ot.userClgNo,
						 ot.challengeNo,
						 ot.clgTitle,
						 ot.mychallengeDate,
						 ot.founder,
						 ot.achievement,
						 ot.state,
			        	 ot.regDate,
			        	 ot.period,
			       	  	 ot.payment
				  from (select  m.userNo,
								m.userClgNo,
								c.challengeNo,
								c.clgTitle,
								m.mychallengeDate,
								m.founder,
								m.achievement,
								m.state,
						        to_char(c.regdate, 'yy/mm/dd') regDate,
						        c.period,
						        m.payment
					    from challenge c, mychallenge m
					    where c.challengeNo = m.challengeNo
					    and   m.state = 2
					    and   m.achievement >= 90)ot
				  )ort
			where rn>=#{startRnum}
			and rn<=#{endRnum}	  
		]]>
	</select>
	
	<!-- 종료 챌린지(실패) + 페이징 -->
	<select id="selectList14" parameterType= "Map" resultType="MCVo">
		<![CDATA[
			select  ort.rn,
					ort.userNo,
					ort.userClgNo,
					ort.challengeNo,
					ort.clgTitle,
					ort.mychallengeDate,
					ort.founder,
					ort.achievement,
					ort.state,
			        ort.regDate,
			        ort.period,
			        ort.payment
			from (select rownum rn,
						 ot.userNo,
						 ot.userClgNo,
						 ot.challengeNo,
						 ot.clgTitle,
						 ot.mychallengeDate,
						 ot.founder,
						 ot.achievement,
						 ot.state,
			        	 ot.regDate,
			        	 ot.period,
			       	  	 ot.payment
				  from (select  m.userNo,
								m.userClgNo,
								c.challengeNo,
								c.clgTitle,
								m.mychallengeDate,
								m.founder,
								m.achievement,
								m.state,
						        to_char(c.regdate, 'yy/mm/dd') regDate,
						        c.period,
						        m.payment
					    from challenge c, mychallenge m
					    where c.challengeNo = m.challengeNo
					    and   m.state = 2
					    and   m.achievement < 90)ot
				  )ort
			where rn>=#{startRnum}
			and rn<=#{endRnum}	  
		]]>
	</select>
	
	<!-- 전체글갯수 구하기 -->
	<select id="selectTotalCnt" resultType="int">
		<![CDATA[
			select count(*) count
			from challenge c, mychallenge m
		    where c.challengeNo = m.challengeNo
		    and m.state=2
		]]>
	</select>
	
	<!-- 성공글갯수 구하기 -->
	<select id="selectTotalCnt2" resultType="int">
		<![CDATA[
			select count(*) count
			from challenge c, mychallenge m
		    where c.challengeNo = m.challengeNo
		    and m.achievement >= 90
		    and m.state=2
		]]>
	</select>	

	<!-- 실패글갯수 구하기 -->
	<select id="selectTotalCnt3" resultType="int">
		<![CDATA[
			select count(*) count
			from challenge c, mychallenge m
		    where c.challengeNo = m.challengeNo
		    and m.achievement < 90
		    and m.state=2
		]]>
	</select>
	
	<!-- 리뷰불러오기 -->
	<select id="selectreviewList" parameterType="String" resultType="MRVo">
		<![CDATA[
			select  reviewNo,
					challengeNo,
					userNo,
					reviewContent,
			from review
		]]>
	</select>
	
	<!-- 리뷰작성 -->
	<insert id="insertReview" parameterType="MRVo">
		<![CDATA[
			insert into review
			values (SEQ_REVIEWNO.nextval,
					#{challengeNo},
					null,
					null,
					#{reviewContent},
					sysdate
					)
		]]>
	</insert>
	
	<!-- 리뷰 작성시 상태 업데이트 -->
	<update id="updateState" parameterType="MCVo">
		<![CDATA[
			update myChallenge
			set state = 2
			where challengeNo = #{challengeNo}
		]]>
	</update>
	
	<!-- 내가 쓴 리뷰 삭제 -->
	<delete id="deleteReview" parameterType="MRVo">
		<![CDATA[
			delete from review 
			where reviewNo = #{reviewNo}
		]]>
	</delete>
	
	<!-- 포인트 내역 리스트 -->
	<select id="selectPoint" parameterType="String" resultType="PointVo">
		select  p.pointNo,
				u.userNo,
				p.pointGroup,
				p.charge,
				p.amount,
				p.pointDate,
				p.source,
				p.pointMemo
		where u.userNo = p.userNo	
	</select>
	
	
	
</mapper>